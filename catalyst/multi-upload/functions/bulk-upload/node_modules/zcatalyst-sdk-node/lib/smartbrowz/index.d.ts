/// <reference types="node" />
import { CatalystApp } from '../catalyst-app';
import { AuthorizedHttpClient } from '../utils/api-request';
import { Readable } from 'stream';
import { ICatalystSmartbrowzPdf, ICatalystSmartbrowzScrShot, ICatalystSmartbrowzTemplate } from '../utils/pojo/smartbrowz';
declare type ICatalystSmartbrowzTemplateOptions = ICatalystSmartbrowzTemplate & (ICatalystSmartbrowzScrShot | ICatalystSmartbrowzPdf);
export declare class Smartbrowz {
    #private;
    readonly requester: AuthorizedHttpClient;
    readonly projectId: string | number;
    constructor(app: CatalystApp);
    convertToPdf(source: string, options?: ICatalystSmartbrowzPdf): Promise<Readable>;
    takeScreenshot(source: string, options?: ICatalystSmartbrowzScrShot): Promise<Readable>;
    generateFromTemplate(id: string, options?: ICatalystSmartbrowzTemplateOptions): Promise<Readable>;
}
export {};
